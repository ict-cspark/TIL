# Baekjoon Online Judge - RGB거리

'''
RGB거리에는 집이 N개 있다. 거리는 선분으로 나타낼 수 있고, 1번 집부터 N번 집이 순서대로 있다.
집은 빨강, 초록, 파랑 중 하나의 색으로 칠해야 한다. 각각의 집을 빨강, 초록, 파랑으로 칠하는 비용이 주어졌을 때, 아래 규칙을 만족하면서 모든 집을 칠하는 비용의 최솟값을 구해보자.
1번 집의 색은 2번 집의 색과 같지 않아야 한다.
N번 집의 색은 N-1번 집의 색과 같지 않아야 한다.
i(2 ≤ i ≤ N-1)번 집의 색은 i-1번, i+1번 집의 색과 같지 않아야 한다.
'''

N = int(input())
color = [list(map(int, input().split())) for _ in range(N)] # 입력값을 2차원 리스트에 저장

for i in range(1, N):       # 두번째 행부터 반복문 시작
    for j in range(3):      # 3가지 색깔만큼 반복
        # 중복을 피하기 위해 본인 열을 제외하고 이전행에서 고를 수 있는 최솟값을 골라 더해서 누적
        color[i][j] += min(color[i - 1][:j] + color[i - 1][j + 1 :])

print(min(color[-1]))       # 마지막행에서 최솟값을 출력