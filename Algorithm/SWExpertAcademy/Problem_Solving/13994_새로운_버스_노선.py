# 13994. 새로운 버스 노선

'''
삼성시는 버스 노선을 일반, 급행, 광역 급행으로 구분해 새롭게 바꾸려고 한다. 모든 정류장은 1번부터 1000번까지의 번호가 부여되어 있으며, 각 노선은 A에서 B번 정류장까지 다음 규칙에 따라 운행한다.
- 모든 버스는 A번에서 출발해 B번까지 운행하므로, A와 B정류장에는 반드시 정차한다.
- 일반버스는 A번부터 B번 사이의 모든 정류장에 정차한다.
- 급행 버스는 A가 짝수인 경우 A와 B 사이의 모든 짝수 번호 정류장에 정차하고, A가 홀수인 경우 A와 B사이의 모든 홀수 번호 정류장에 정차한다.
- 광역 급행 버스는 A가 짝수인 경우 A와 B 사이의 모든 4의 배수 번호 정류장에, A가 홀수인 경우 A와 B 사이의 3의 배수이면서 10의 배수가 아닌 번호 정류장에 정차한다.

버스의 종류와 출발 도착 정류장에 대한 정보가 주어질 때, 최대 몇 개의 노선이 같은 정류장에 정차하는지 알아내는 프로그램을 만들어보자.
'''
import sys
sys.stdin = open("input.txt", "r")

# 테스트케이스 입력받기
T = int(input())

for test_case in range(1, T + 1):
    N = int(input())                            # 노선 수 N 입력받기 
    bus = [0] * 1001                            # 정류장 리스트를 만들어 인덱스와 정류장번호를 일치시키기 위해 +1을 해서 생성
    for _ in range(N):                          # 노선수만큼 반복문 실행
        P, A, B = map(int, input().split())     # 버스 타입, 출발, 도착 정류장 P,A,B 입력받기

        if P == 1:                              # 일반버스일 경우 A, B 사이 모든 정류장에 1을 추가
            for a in range(A, B + 1):
                bus[a] += 1
        elif P == 2:                            # 급행버스일 경우 2 정류장마다 1번씩 1을 추가
            for b in range(A, B + 1, 2):
                bus[b] += 1

        else:                                   # 광역급행 버스일 경우 아래 반복문 실행
            for c in range(A, B + 1):           # A와 B사이의 정류장 갯수만큼 반복문 실행하여
                if A%2 == 0 and c%4 == 0:       # 출발정류장이 짝수이면서 해당 정류장이 4의 배수일 경우에 1을 추가
                    bus[c] += 1
                elif A%2 == 1 and c%3 == 0 and c%10 != 0:   # 출발정류장이 홀수이면서 해당 정류장이 3의 배수이고 10의 배수가 아닐경우 1을 추가
                    bus[c] += 1

    print(f'#{test_case} {max(bus)}')           # 버스 정류장 리스트에서 최댓값을 출력